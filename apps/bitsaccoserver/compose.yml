version: '3.8'

services:
  bitsaccoserver:
    build:
      context: .
      target: development
      dockerfile: Dockerfile
    container_name: bitsaccoserver-dev
    ports:
      - "4000:4000"   # Main API
      - "4001:4001"   # WebSocket
      - "4002:4002"   # gRPC
      - "9090:9090"   # Prometheus metrics
      - "9229:9229"   # Debug port
    environment:
      - NODE_ENV=development
      - PORT=4000
      - WEBSOCKET_PORT=4001
      - GRPC_PORT=4002
      - MONGODB_URI=mongodb://mongodb:27017/bitsacco
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=debug
      - APP_VERSION=1.0.0-dev
    volumes:
      - .:/app
      - /app/node_modules
      - ../../libs:/app/libs
    depends_on:
      - mongodb
      - redis
    networks:
      - bitsacco-network
    restart: unless-stopped
    stdin_open: true
    tty: true

  mongodb:
    image: mongo:7.0
    container_name: bitsacco-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=bitsacco
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - bitsacco-network
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    container_name: bitsacco-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass "redis-password"
    volumes:
      - redis_data:/data
    networks:
      - bitsacco-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: bitsacco-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    networks:
      - bitsacco-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: bitsacco-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - bitsacco-network
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  bitsacco-network:
    driver: bridge