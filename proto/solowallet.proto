syntax = "proto3";

import "lib.proto";

package solowallet;

service SolowalletService {
  rpc DepositFunds(DepositFundsRequest) returns (UserTxsResponse){}

  rpc ContinueDepositFunds(ContinueDepositFundsRequest) returns (UserTxsResponse){}

  rpc WithdrawFunds(WithdrawFundsRequest) returns (UserTxsResponse){}

  rpc ContinueWithdrawFunds(WithdrawFundsRequest) returns (UserTxsResponse){}

  rpc UserTransactions(UserTxsRequest) returns (UserTxsResponse){}

  rpc UpdateTransaction(UpdateTxRequest) returns (UserTxsResponse) {}

  rpc FindTransaction(lib.FindTxRequest) returns (SolowalletTx) {}
  
  // Process LNURL withdrawal request from a Lightning wallet
  rpc ProcessLnUrlWithdraw(lib.LnUrlWithdrawRequest) returns (lib.LnUrlWithdrawResponse) {}
}

message DepositFundsRequest {
  string user_id = 1;

  int32 amount_fiat = 2;

  string reference = 3;

  optional lib.OnrampSwapSource onramp = 4;

  // Add more optional funding sources, like direct lightning deposit
  reserved 5,6,7,8,9,10;

  optional lib.PaginatedRequest pagination = 11;
}

message ContinueDepositFundsRequest {
  string user_id = 1;

  int32 amount_fiat = 2;

  string reference = 3;

  optional lib.OnrampSwapSource onramp = 4;

  reserved 5,6,7,8,9,10;

  optional lib.PaginatedRequest pagination = 11;
}

message WithdrawFundsRequest {
  string user_id = 1;

  int32 amountFiat = 2;

  string reference = 3;

  optional lib.OfframpSwapTarget offramp = 4;

  optional lib.Bolt11 lightning = 5;

  optional bool lnurl_request = 6;

  // Add more optional withdrawal targets, like bolt12 address

  reserved 7,8,9,10;

  optional lib.PaginatedRequest pagination = 11;
}

message ContinueWithdrawFundsRequest {
  string user_id = 1;

  int32 amountFiat = 2;

  string reference = 3;

  optional lib.OfframpSwapTarget offramp = 4;

  optional lib.Bolt11 lightning = 5;

  optional bool lnurl_request = 6;

  reserved 7,8,9,10;

  optional lib.PaginatedRequest pagination = 11;
}

message UserTxsRequest {
  string user_id = 1;
  reserved 2,3,4,5,6,7,8,9,10;
  optional lib.PaginatedRequest pagination = 11;
}

message UserTxsResponse {
  optional string tx_id = 1;
  PaginatedSolowalletTxsResponse ledger = 2;
  optional WalletMeta meta = 3;
  string user_id = 4;
}

message SolowalletTx {
  string id = 1;

  string user_id = 2;

  lib.TransactionStatus status = 3;

  int32 amount_msats = 4;

  optional int32 amount_fiat = 5;

  lib.FmLightning lightning = 6;

  lib.TransactionType type = 7;

  reserved 8, 9;

  string reference = 10;

  string createdAt = 11;

  optional string updatedAt = 12;
}

message PaginatedSolowalletTxsResponse {
  // List of onramp swaps
  repeated SolowalletTx transactions = 1;
  // Current page offset
  int32 page = 2;
  // Number of items return per page
  int32 size = 3;
  // Number of pages given the current page size
  int32 pages = 4;
}

message WalletMeta {
  int32 total_deposits = 1;
  float total_withdrawals = 2;
  int32 current_balance = 3;
}

message UpdateTxRequest {
  string tx_id = 1;
  SolowalletTxUpdates updates = 2;

  reserved 3,4,5,6,7,8,9,10;

  optional lib.PaginatedRequest pagination = 11;
}

message SolowalletTxUpdates {
  optional lib.TransactionStatus status = 1;
  optional lib.Bolt11 lightning = 2;
  optional string reference = 3;
}

message ContinueTxRequest {
  string user_id = 1;

  string tx_id = 2;

  int32 amount_fiat = 3;

  optional lib.OnrampSwapSource onramp = 4;

  reserved 6,7,8,9;

  optional string reference = 10;

  optional lib.PaginatedRequest pagination = 11;
}
